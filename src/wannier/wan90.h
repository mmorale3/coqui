/**
 * ==========================================================================
 * CoQuí: Correlated Quantum ínterface
 *
 * Copyright (c) 2022-2025 Simons Foundation & The CoQuí developer team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ==========================================================================
 */


#ifndef COQUI_WAN90_H
#define COQUI_WAN90_H

#include "configuration.hpp"

#include "nda/nda.hpp"
#include "nda/h5.hpp"
#include "h5/h5.hpp"

#include "IO/ptree/ptree_utilities.hpp"
#include "utilities/mpi_context.h"
#include "mean_field/MF.hpp"

/** Utilities for Brillioun zone unfolding **/


/* MAM: get mpi context from mf when it is avaialble */

namespace wannier {
  using mpi_context_t = utils::mpi_context_t<>;

  /**
   * Generate wannier90 data files from MF object 
   * @param context - [INPUT]
   * @param mf - [INPUT] mean-field instance for all the metadata of the system
   * @param pt - [INPUT] property tree with input options 
   *
   * Input options:
   * Required:
   *  - prefix                     [string] Wannier90 file name prefix. prefix.nnkp must exist.
   * Optionals with default value
   *  - mmn = "true"               [bool] If true, will compute Mmn and write to file prefix.mmn  
   *  - amn = "true"               [bool] If true, will compute Amn and write to file prefix.amn  
   * Optional Parameters for calculation of initial projections.
   *  - r0  = std::exp(-6.0)       [double] Initial point of radial grid in spherical bessel transform.
   *  - rN  = 10.0                 [double] Last point of radial grid in spherical bessel transform.
   *  - nr  = 331                  [int] Number of points in radial grid in spherical bessel transform. 
   */
  void to_wannier90(mf::MF &mf, ptree &pt); 

  /**
   * Starting from wannier90's nnkp file, this routine generates wannier90 mmn, amn and eig data files 
   * from MF object, writes them to file and calls wannier90 in library mode to perform wannierization.
   * *.win and *.nnkp files must exist. Ideally, the lattice, kpoint and atom position data in *.win 
   * were appended by CoQui. All parameters relevant for wannierization should be in the *win file. 
   *
   * @param context - [INPUT]
   * @param mf - [INPUT] mean-field instance for all the metadata of the system
   * @param pt - [INPUT] property tree with input options 
   *
   * Input options:
   * Required:
   *  - prefix                     [string] Wannier90 file name prefix. prefix.nnkp must exist.
   * Optional Parameters for calculation of initial projections.
   *  - r0  = std::exp(-6.0)       [double] Initial point of radial grid in spherical bessel transform.
   *  - rN  = 10.0                 [double] Last point of radial grid in spherical bessel transform.
   *  - nr  = 331                  [int] Number of points in radial grid in spherical bessel transform. 
   */
  void wannier90_library_mode_from_nnkp(mf::MF &mf, ptree &pt);

  /**
   * Starting from wannier90's win file, this routine generates maximally localized orbitals starting
   * from a MF object. If present in win file, atomic positions, kpoints and lattice vectors must be
   * consistent with the current calculation (e.g. as if generated by wannier90.append_win). 
   * All (other) parameters relevant for wannierization should be in the *win file. 
   *
   * @param context - [INPUT]
   * @param mf - [INPUT] mean-field instance for all the metadata of the system
   * @param pt - [INPUT] property tree with input options 
   *
   * Input options:
   * Required:
   *  - prefix                     [string] Wannier90 file name prefix. prefix.nnkp must exist.
   * Optionals with default value
   *  - mmn = "true"               [bool] If true, will write the prefix.mmn file. 
   *  - amn = "true"               [bool] If true, will write the prefix.amn. 
   *  - eig = "true"               [bool] If true, will write the prefix.eig.
   * Optional Parameters for calculation of initial projections.
   *  - r0  = std::exp(-6.0)       [double] Initial point of radial grid in spherical bessel transform.
   *  - rN  = 10.0                 [double] Last point of radial grid in spherical bessel transform.
   *  - nr  = 331                  [int] Number of points in radial grid in spherical bessel transform. 
   */
  void wannier90_library_mode(mf::MF &mf, ptree &pt);

  /**
   * Append system information to wannier's *.win file 
   * @param context - [INPUT]
   * @param mf - [INPUT] mean-field instance for all the metadata of the system
   * @param pt - [INPUT] property tree with input options 
   *
   * Input options:
   * Required:
   *  - prefix                     [string] Wannier90 file name prefix. prefix.win must exist.
   * Optional Parameters for calculation of initial projections.
   *  - atoms = "true"               [bool] If true, will add atom positions to win file. 
   *  - kpts = "true"                [bool] If true, will add kpoints to win file. 
   *  - cell = "true"                [bool] If true, will add cell_cart to win file. 
   */  
  void append_wannier90_win(mf::MF &mf, ptree &pt); 

}
#endif
